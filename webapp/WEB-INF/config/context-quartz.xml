<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx" xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<bean id="JobBean_syncHitChatData" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.appg.djTalk.quartz.JobBean_syncHitChatData" />
		<property name="applicationContextJobDataKey" value="applicationContext" />
	</bean>
	
	<bean id="JobBean_birthDayPush" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.appg.djTalk.quartz.JobBean_birthDayPush" />
		<property name="applicationContextJobDataKey" value="applicationContext" />
	</bean>

	<bean id="JobBean_attendancePush" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.appg.djTalk.quartz.JobBean_attendancePush" />
		<property name="applicationContextJobDataKey" value="applicationContext" />
	</bean>

	<bean id="JobBean_cyberSecurityPush" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.appg.djTalk.quartz.JobBean_cyberSecurityPush" />
		<property name="applicationContextJobDataKey" value="applicationContext" />
	</bean>
	
	<!-- startDelay :: 1000 == 1 second, 60minuts=3600000, 1day=86400000 -->

	<bean id="JobBean_syncHitChatData_Trigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="JobBean_syncHitChatData" />
		<!-- <property name="cronExpression" value="0 55 * * * ?" />  // 매 55분마다 실행-->
		<property name="cronExpression" value="0 0 3 * * ?" />
	</bean>

	<bean id="JobBean_birthDayPush_Trigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="JobBean_birthDayPush" />
		<!-- <property name="cronExpression" value="0 55 * * * ?" />  // 매 55분마다 실행-->
		<property name="cronExpression" value="0 0 9 * * ?" />
	</bean>
	
	<bean id="JobBean_attendancePush_Trigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="JobBean_attendancePush" />
		<!-- <property name="cronExpression" value="0 55 * * * ?" />  // 매 55분마다 실행-->
		<property name="cronExpression" value="0 30 16 * * ?" />
	</bean>
	
	<bean id="JobBean_cyberSecurityPush_Trigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="JobBean_cyberSecurityPush" />
		<!-- <property name="cronExpression" value="0 55 * * * ?" />  // 매 55분마다 실행-->
		<property name="cronExpression" value="0 0 14 * * ?" />
	</bean>

	<bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list> 
				<ref bean="JobBean_syncHitChatData_Trigger" />
				<ref bean="JobBean_birthDayPush_Trigger" />
				<ref bean="JobBean_attendancePush_Trigger" />
				<ref bean="JobBean_cyberSecurityPush_Trigger" />
			</list>
		</property>
		<property name="quartzProperties">
			<props>
            <prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
            <prop key="org.quartz.threadPool.threadCount">5</prop>
            <prop key="org.quartz.threadPool.threadPriority">4</prop>
            <prop key="org.quartz.jobStore.class">org.quartz.simpl.RAMJobStore</prop>
            <prop key="org.quartz.jobStore.misfireThreshold">60000</prop>
	        </props>
		</property>
	</bean>

</beans>